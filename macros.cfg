
#####################################################################
#	Macros
#####################################################################

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

# Simple Filament Change Macros
# Version 2.5 2022-11-20

# This is used for sending error messages to the console
[respond]

###### M600 ######
# 
[gcode_macro M600]
gcode:
  SET_IDLE_TIMEOUT TIMEOUT=7200 ; Increase idle timeout
  PAUSE X=10 Y=10 Z_MIN=50; Pause printing
  UNLOAD_FILAMENT ; Unload filament

###### UNLOAD_FILAMENT ######
# 
# Edit the default() value for LENGTH
# to the amount of retraction required to unload the filament
# 
# Edit the default() value for TARGET
# to the target extruder temperature used during filament change
[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set LENGTH = params.LENGTH|default(50)|float %} ; Unload length
  {% set TARGET = params.TARGET|default(245)|float %} ; Unload temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if cur_temp|int < TARGET|int %} ; If current temp is below target
    M117 Heating nozzle...
    M109 S{TARGET} ; Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{printer.configfile.config.extruder.min_extrude_temp|int} ; Heat up to min_extrude_temp
  {% endif %}
  G91 ; Relative positioning
  # Pre-unload
  G1 E5.0 F1200 
  G1 E3.0 F1600
  G1 E-13.14 F7000
  # Unload
  G1 E-{LENGTH} F3000
  G90 ; Absolute postitioning


###### LOAD_FILAMENT ######
# 
# # Edit the default() value for FAST
# to the amount of extrusion required to bring the filament to
# just before it starts coming out the hotend (bowden length)
# 
# # Edit the default() value for SLOW
# to the amount of extrusion required after it reaches the hotend (purge amount)
# 
[gcode_macro LOAD_FILAMENT]
gcode:
  {% set SLOW = params.SLOW|default(50)|float %} ; Purge amount
  {% set FAST = params.FAST|default(10)|float %} ; Load length
  {% set TARGET = params.TARGET|default(245)|float %} ; Load temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if cur_temp|int < TARGET|int and params.TARGET is defined %} ; If current temp is below target
    M117 Heating nozzle...
    M109 S{TARGET} ; Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{printer.configfile.config.extruder.min_extrude_temp|int} ; Heat up to min_extrude_temp
  {% endif %}
  M117  LOADING...
  G91 ; Relative positioning
  G1 E25.0 F1000 ; pre-load
  G1 E{FAST} F2500 ; load up to hotend
  G4 P900 ; wait a moment
  G1 E{SLOW} F250 ; purge to change filament
  G90 ; Absolute postitioning
  SET_IDLE_TIMEOUT TIMEOUT=900 ; Return idle timeout to normal


###### PURGE ######
# 
# Edit the default() value for LENGTH
# to the amount of filament you'd like to purge
# 
[gcode_macro PURGE]
gcode:
  {% set LENGTH = params.LENGTH|default(80)|float %} ; Purge length
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if cur_temp|int < TARGET|int and params.TARGET is defined %} ; If current temp is below target
    M117 Heating nozzle...
    M109 S{TARGET} ; Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{printer.configfile.config.extruder.min_extrude_temp|int} ; Heat up to min_extrude_temp
  {% endif %}
  M117 PURGING...
  G91 ; Relative positioning
  G1 E{LENGTH} F250 ; Purge 50mm of filament
  G90 ; Absolute postitioning

######################################################################
# G32
######################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    #STATUS_HOMING
    G28
    #STATUS_LEVELING    
    QUAD_GANTRY_LEVEL
    LEDS_ON
    G90
    G0 X175 Y175 Z20 F3600

######################################################################
# Print Start
######################################################################
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set filament_type = params.FILAMENT|default(ABS)|string %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_PIN PIN=lights VALUE=1                            # Turns on lights

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  #STATUS_HOMING                                         # Sets SB-leds to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

#  ##  Uncomment if you have a Nevermore.
#  {% if filament_type  == "ABS" or filament_type  == "ASA" %}
#    #SET_FAN_SPEED FAN=nevermore SPEED=1                # Turns on the nevermore
#    SET_PIN PIN=nevermore VALUE=1                       # Turns on the nevermore
#  {% endif %}

  # Checks if the bed temp is higher than 80c - if so then trigger a heatsoak.
  {% if params.BED|int > 80 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}C"           # Displays info
    #STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan
    ##  Uncomment if you have a Nevermore.
    SET_PIN PIN=nevermore VALUE=1                       # Turns on the nevermore    
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}C"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
  
  # If the bed temp is not over 80c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}C"           # Displays info
    #STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heat Soaking for 5 Min"       # Displays info
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}
 
  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150C"                   # Displays info
  M109 S150                                             # Heats the nozzle to 150c

  # Clean nozzle
  SET_DISPLAY_TEXT MSG="Cleaning Nozzle"
  #STATUS_CLEANING
  CLEAN_NOZZLE                                          # Clean nozzle
  G28 Z                                                 # Home Z again after cleaning

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Quad Gantry Level"              # Displays info
  #STATUS_LEVELING                                       # Sets SB-leds to leveling-mode
  QUAD_GANTRY_LEVEL                                     # Levels the buildplate via QGL
  G28 Z                                                 # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed Mesh"                       # Displays info
  #STATUS_MESHING                                        # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE                                    # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}C"     # Displays info
  #STATUS_HEATING                                        # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Goes to center of the bed
  M107                                                  # Turns off partcooling fan
  M109 S{target_extruder}                               # Heats the nozzle to printing temp
  #STATUS_CLEANING
  CLEAN_NOZZLE                                          # Cleans and purges heated nozzle     
  G1 X25 F9000                                          # Moves nozzle to a safe location

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printing"                       # Displays info
  #STATUS_PRINTING                                       # Sets SB-leds to printing-mode
  ADAPTIVE_PURGE                                        # Purge
  
   
######################################################################
# Print End
######################################################################

[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                                                # wait for buffer to clear
    G92 E0                                              # zero the extruder
    G1 E-30.0 F3600                                     # retract filament
    TURN_OFF_HEATERS 
    G90                                                 # absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000             # move nozzle to remove stringing
    G0 X262.5 Y345 F3600                                # park nozzle at rear
    M107                                                # turn off fan
    SET_PIN PIN=nevermore VALUE=0
    #SET_LOGO_LEDS_OFF
    #SET_NOZZLE_LEDS_OFF
    SET_PIN PIN=lights VALUE=0
    BED_MESH_CLEAR    
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

######################################################################
# Move Center
######################################################################

[gcode_macro MOVE_CENTER]
# Moves printhead to the center of the build area
gcode:
    G90
    G1 Z50 F9000    
    G1 X175 Y175 F9000                                  # Move to center position
    G90

######################################################################
# Pressure Advance
######################################################################

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}


######################################################################
# Backup Config
######################################################################

[gcode_shell_command backup_cfg]
command: /home/pi/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

######################################################################
# Client Variables
######################################################################

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True                        # use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 262.5                       # custom x position
variable_custom_park_y    : 345                         # custom y position
#variable_custom_park_dz   : 2.0                        # custom dz value
#variable_retract          : 1.0                        # the value to retract while PAUSE
variable_cancel_retract   : 30.0                        # the value to retract while CANCEL_PRINT
variable_speed_retract    : 30.0                        # retract speed in mm/s
#variable_unretract        : 1.0                        # the value to unretract while RESUME
variable_speed_unretract  : 30.0                        # unretract speed in mm/s
#variable_speed_hop        : 15.0                       # z move speed in mm/s
#variable_speed_move       : 100.0                      # move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
gcode: