
#####################################################################
#	Macros
#####################################################################

######################################################################
# Filament Change
######################################################################
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

# Simple Filament Change Macros
# Version 2.5 2022-11-20

# This is used for sending error messages to the console
[respond]

###### M600 ######
[gcode_macro M600]
gcode:
  SET_IDLE_TIMEOUT TIMEOUT=7200                         # Increase idle timeout
  PAUSE X=10 Y=10 Z_MIN=50; Pause printing
  UNLOAD_FILAMENT                                       # Unload filament

###### UNLOAD_FILAMENT ######
# 
# Edit the default() value for LENGTH
# to the amount of retraction required to unload the filament
# 
# Edit the default() value for TARGET
# to the target extruder temperature used during filament change
[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set LENGTH = params.LENGTH|default(50)|float %}    # Unload length
  {% set TARGET = params.TARGET|default(255)|float %}   # Unload temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} # Current temperature
  {% if cur_temp|int < TARGET|int %}                    # If current temp is below target
    M117 Heating nozzle...
    M109 S{TARGET}                                      # Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %}        # Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{printer.configfile.config.extruder.min_extrude_temp|int} # Heat up to min_extrude_temp
  {% endif %}
  G91                                                   # Relative positioning
  # Pre-unload
  G1 E5.0 F1200 
  G1 E3.0 F1600
  G1 E-13.14 F7000
  # Unload
  G1 E-{LENGTH} F3000
  G90                                                   # Absolute postitioning

###### LOAD_FILAMENT ######
# 
# # Edit the default() value for FAST
# to the amount of extrusion required to bring the filament to
# just before it starts coming out the hotend (bowden length)
# 
# # Edit the default() value for SLOW
# to the amount of extrusion required after it reaches the hotend (purge amount)
[gcode_macro LOAD_FILAMENT]
gcode:
  {% set SLOW = params.SLOW|default(50)|float %}        # Purge amount
  {% set FAST = params.FAST|default(10)|float %}        # Load length
  {% set TARGET = params.TARGET|default(255)|float %}   # Load temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} # Current temperature
  {% if cur_temp|int < TARGET|int and params.TARGET is defined %} # If current temp is below target
    M117 Heating nozzle...
    M109 S{TARGET}                                      # Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %}        # Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{printer.configfile.config.extruder.min_extrude_temp|int} # Heat up to min_extrude_temp
  {% endif %}
  M117  LOADING...
  G91                                                   # Relative positioning
  G1 E25.0 F1000                                        # pre-load
  G1 E{FAST} F2500                                      # load up to hotend
  G4 P900                                               # wait a moment
  G1 E{SLOW} F250                                       # purge to change filament
  G90                                                   # Absolute postitioning
  SET_IDLE_TIMEOUT TIMEOUT=900                          # Return idle timeout to normal

######################################################################
# G32
######################################################################
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_HOMING
    G28
    STATUS_LEVELING    
    QUAD_GANTRY_LEVEL
    LEDS_ON
    G90
    G0 X175 Y175 Z20 F3600

######################################################################
# Print Start
######################################################################
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set filament_type = params.FILAMENT|default(ABS)|string %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_PIN PIN=lights VALUE=1                            # Turns on lights
  SET_FAN_SPEED FAN=MCU_fan SPEED=0.5

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING                                         # Sets SB-leds to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 80c - if so then trigger a heatsoak.
  {% if params.BED|int > 80 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}C"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan
    ##  Uncomment if you have a Nevermore.
    SET_PIN PIN=nevermore VALUE=1                       # Turns on the nevermore    
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}C"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
  
  # If the bed temp is not over 80c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}C"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heat Soaking for 3 Min"       # Displays info
    G4 P180000                                          # Waits 3 min for the bedtemp to stabilize
  {% endif %}
 
  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150C"                   # Displays info
  M109 S150                                             # Heats the nozzle to 150c

  # Clean nozzle
  SET_DISPLAY_TEXT MSG="Cleaning Nozzle"
  STATUS_CLEANING
  CLEAN_NOZZLE                                          # Clean nozzle
  G28 Z                                                 # Home Z again after cleaning

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Quad Gantry Level"              # Displays info
  STATUS_LEVELING                                       # Sets SB-leds to leveling-mode
  QUAD_GANTRY_LEVEL                                     # Levels the buildplate via QGL
  G28 Z                                                 # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed Mesh"                       # Displays info
  STATUS_MESHING                                        # Sets SB-leds to bed mesh-mode
  BED_MESH_CALIBRATE                                    # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}C"     # Displays info
  STATUS_HEATING                                        # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Goes to center of the bed
  M107                                                  # Turns off partcooling fan
  G1 X25 F9000                                          # Moves nozzle to a safe location
  M109 S{target_extruder}                               # Heats the nozzle to printing temp
  STATUS_CLEANING
  CLEAN_NOZZLE                                          # Cleans and purges heated nozzle     

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Printing"                       # Displays info
  STATUS_PRINTING                                       # Sets SB-leds to printing-mode
  VORON_PURGE                                           # Purge
  
   
######################################################################
# Print End
######################################################################
[gcode_macro PRINT_END]
# Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                                                # wait for buffer to clear
    G92 E0                                              # zero the extruder
    G1 E-30.0 F3600                                     # retract filament out of the hot zone
    G91                                                 # relative positioning

    # Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    # Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    {% set z_park_abs = printer.toolhead.position.z + 25.0 %}
    {% if z_park_abs > max_z %}
        {% set z_park_abs = max_z %}
    {% endif %}

    G0 Z{z_safe} F3600                                  # move nozzle up
    G0 X{x_safe} Y{y_safe} F20000                       # move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                                                # turn off fan
    G90                                                 # absolute positioning
    G0 Z{z_park_abs} F3600                              # move nozzle up away from the print
    G0 X{max_x / 2} Y{max_y - 10} F15000                # park nozzle at rear
    SET_PIN PIN=nevermore VALUE=0
    SET_FAN_SPEED FAN=MCU_fan SPEED=0
    SET_LOGO_LEDS_OFF
    SET_NOZZLE_LEDS_OFF
    SET_PIN PIN=lights VALUE=0
    BED_MESH_CLEAR    
    M117 Done
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

######################################################################
# Move Center
######################################################################
[gcode_macro MOVE_CENTER]
# Moves printhead to the center of the build area
gcode:
    G90
    G1 Z50 F9000    
    G1 X175 Y175 F9000                                  # Move to center position
    G90

######################################################################
# Pressure Advance
######################################################################
# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# For use with Marlin's linear advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	SET_PRESSURE_ADVANCE ADVANCE={pa}

######################################################################
# Clean Nozzle
######################################################################
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 200
variable_start_y: 354
variable_start_z: 8.5
variable_wipe_dist: -50
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

######################################################################
# Backup Config
######################################################################
[gcode_shell_command backup_cfg]
command: /home/pi/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

######################################################################
# Knomi
######################################################################
[gcode_macro _KNOMI_STATUS] 
variable_homing: False  
variable_probing: False  
gcode:  

######################################################################
# Client Variables
######################################################################
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True                        # use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 340                         # custom x position
variable_custom_park_y    : 350                         # custom y position
#variable_custom_park_dz   : 2.0                         # custom dz value
#variable_retract          : 1.0                         # the value to retract while PAUSE
variable_cancel_retract   : 30.0                        # the value to retract while CANCEL_PRINT
variable_speed_retract    : 30.0                        # retract speed in mm/s
#variable_unretract        : 1.0                         # the value to unretract while RESUME
variable_speed_unretract  : 30.0                        # unretract speed in mm/s
#variable_speed_hop        : 15.0                        # z move speed in mm/s
#variable_speed_move       : 100.0                       # move speed in mm/s
variable_park_at_cancel   : True                        # allow to move the toolhead to park while execute CANCEL_PRINT
variable_park_at_cancel_x : 340                         # different park position during CANCEL_PRINT
variable_park_at_cancel_y : 340                         # different park position during CANCEL_PRINT
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False                        # use fw_retraction instead of the manual version [True/False]
gcode:

